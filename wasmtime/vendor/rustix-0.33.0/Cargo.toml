# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2018"
name = "rustix"
version = "0.33.0"
authors = ["Dan Gohman <dev@sunfishcode.online>", "Jakub Konka <kubkon@jakubkonka.com>"]
exclude = ["/.github"]
description = "Safe Rust bindings to POSIX/Unix/Linux/Winsock2-like syscalls"
documentation = "https://docs.rs/rustix"
keywords = ["api", "file", "network", "safe", "syscall"]
categories = ["os::unix-apis", "date-and-time", "filesystem", "network-programming"]
license = "Apache-2.0 WITH LLVM-exception OR Apache-2.0 OR MIT"
repository = "https://github.com/bytecodealliance/rustix"
[package.metadata.docs.rs]
features = ["procfs"]
rustdoc-args = ["--cfg", "doc_cfg"]
targets = ["x86_64-unknown-linux-gnu", "i686-unknown-linux-gnu", "x86_64-apple-darwin", "x86_64-pc-windows-msvc"]

[[bench]]
name = "mod"
harness = false
[dependencies.alloc]
version = "1.0.0"
optional = true
package = "rustc-std-workspace-alloc"

[dependencies.bitflags]
version = "1.2.1"

[dependencies.compiler_builtins]
version = "0.1.49"
optional = true

[dependencies.core]
version = "1.0.0"
optional = true
package = "rustc-std-workspace-core"

[dependencies.io-lifetimes]
version = "0.5.1"
optional = true
default-features = false

[dependencies.itoa]
version = "1.0.1"
optional = true
default-features = false
[dev-dependencies.is-terminal]
version = "0.0.0"

[dev-dependencies.libc]
version = "0.2.114"

[dev-dependencies.serial_test]
version = "0.5"

[dev-dependencies.tempfile]
version = "3.2.0"
[build-dependencies.cc]
version = "1.0.68"
optional = true

[features]
all-impls = ["async-std", "tokio", "os_pipe", "socket2", "mio", "fs-err"]
async-std = ["io-lifetimes/async-std"]
default = ["std"]
fs-err = ["io-lifetimes/fs-err"]
mio = ["io-lifetimes/mio"]
os_pipe = ["io-lifetimes/os_pipe"]
procfs = ["once_cell", "itoa"]
rustc-dep-of-std = ["core", "alloc", "compiler_builtins", "linux-raw-sys/rustc-dep-of-std", "bitflags/rustc-dep-of-std", "libc/rustc-dep-of-std"]
socket2 = ["io-lifetimes/socket2"]
std = ["io-lifetimes", "linux-raw-sys/std"]
tokio = ["io-lifetimes/tokio"]
[target."cfg(all(not(rustix_use_libc), any(target_os = \"linux\"), any(target_arch = \"x86\", all(target_arch = \"x86_64\", not(target_pointer_width = \"32\")), target_arch = \"arm\", target_arch = \"aarch64\", target_arch = \"riscv64\")))".dependencies.linux-raw-sys]
version = "0.0.37"
features = ["general", "errno", "v5_4", "v5_11", "no_std"]
default-features = false
[target."cfg(any(rustix_use_libc, not(all(any(target_os = \"linux\"), any(target_arch = \"x86\", all(target_arch = \"x86_64\", not(target_pointer_width = \"32\")), target_arch = \"arm\", target_arch = \"aarch64\", target_arch = \"riscv64\")))))".dependencies.errno]
version = "0.2.8"
default-features = false

[target."cfg(any(rustix_use_libc, not(all(any(target_os = \"linux\"), any(target_arch = \"x86\", all(target_arch = \"x86_64\", not(target_pointer_width = \"32\")), target_arch = \"arm\", target_arch = \"aarch64\", target_arch = \"riscv64\")))))".dependencies.libc]
version = "0.2.114"
features = ["extra_traits"]
[target."cfg(any(target_os = \"android\", target_os = \"linux\"))".dependencies.once_cell]
version = "1.5.2"
optional = true
[target."cfg(not(target_os = \"emscripten\"))".dev-dependencies.criterion]
version = "0.3"
[target."cfg(windows)".dependencies.winapi]
version = "0.3.9"
features = ["ws2ipdef", "ws2tcpip"]
